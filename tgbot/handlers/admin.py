from aiogram import Dispatcher
from aiogram.types import Message
from tgbot.keyboards.reply import main_menu
from tgbot.funcs.queue import *
import logging

logger = logging.getLogger(__name__)


async def admin_start(message: Message):
    from_id = message.from_user.id

    users = dict(users_read())
    if users.get(str(from_id)):
        name = users.get(str(from_id))["f_name"]
    else:
        name = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥–º–∏–Ω"
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç, {name}! üòé\n\n–¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ã—á–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ üßë‚Äçüéì –∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º ü§ñ\n\n–ö–æ–º–∞–Ω–¥—ã: /help", reply_markup=main_menu)
    logger.info(f"New user ID{from_id} start - admin")


async def admin_help(message: Message):
    await message.answer("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n/users (—Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)\n/subjects (—Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤)\n/queue (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—á–µ—Ä–µ–¥—å)")


async def admin_cmds(message: Message):
    cmd = message.text.replace("/", "")

    if cmd == "users":
        await message.answer(str(users_read()))
    elif cmd == "subjects":
        await message.answer(str(subjects_read()))
    elif cmd == "queue":
        await message.answer(str(queue_read()))


def register_admin(dp: Dispatcher):
    dp.register_message_handler(admin_start, commands=[
                                "start"], state="*", is_admin=True)
    dp.register_message_handler(admin_help, commands=[
                                "help"], state="*", is_admin=True)
    dp.register_message_handler(admin_cmds, commands=[
                                "users", "subjects", "queue"], state="*", is_admin=True)
